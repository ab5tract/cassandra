
# Gem::Specification for Cassandra-0.2.3
# Originally generated by Echoe

Gem::Specification.new do |s|
  s.name = %q{cassandra}
  s.version = "0.2.3"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Matthew King"]
  s.date = %q{2008-09-08}
  s.description = %q{Generates CSS using Ruby, like Markaby}
  s.email = %q{automatthew@gmail.com}
  s.extra_rdoc_files = ["lib/cassandra.rb", "lib/properties.rb", "lib/tags.rb", "README.rdoc"]
  s.files = ["cassandra.gemspec", "lib/cassandra.rb", "lib/properties.rb", "lib/tags.rb", "Manifest", "misc/dan.rb", "misc/meyer_reset.css", "README.rdoc", "site/basic.cssy", "site/basic.rb", "site/cssy_title.jpg", "site/flower.png", "site/index.mab", "site/ruby.cssy", "test/basics.rb", "test/dan.cssy", "test/fiddle.css", "test/fiddle.cssy", "test/helper.rb"]
  s.has_rdoc = true
  s.homepage = %q{}
  s.rdoc_options = ["--line-numbers", "--inline-source", "--title", "Cassandra", "--main", "README.rdoc"]
  s.require_paths = ["lib"]
  s.rubyforge_project = %q{cassandra}
  s.rubygems_version = %q{1.2.0}
  s.summary = %q{Generates CSS using Ruby, like Markaby}
  s.test_files = ["test/basics.rb", "test/helper.rb"]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 2

    if current_version >= 3 then
    else
    end
  else
  end
end


# # Original Rakefile source (requires the Echoe gem):
# 
# require 'rubygems'
# 
# Version = '0.2.3'
# 
# task :default => [ :test ]
# 
# begin
#   gem 'echoe', '>=2.7'
#   require 'echoe'
#   Echoe.new('cassandra', Version) do |p|
#     p.project = 'cassandra'
#     p.summary = "Generates CSS using Ruby, like Markaby"
#     p.author = "Matthew King"
#     p.email = "automatthew@gmail.com"
#     p.ignore_pattern = /^(\.git).+/
#     p.test_pattern = "test/*.rb"
#   end
# rescue
#   "(ignored echoe gemification, as you don't have the Right Stuff)"
# end
# 
# module Rake::TaskManager
#   def delete_task(task_class, *args, &block)
#     task_name, deps = resolve_args(args)
#     @tasks.delete(task_class.scope_name(@scope, task_name).to_s)
#   end
# end
# class Rake::Task
#   def self.delete_task(args, &block) Rake.application.delete_task(self, args, &block) end
# end
# def delete_task(args, &block) Rake::Task.delete_task(args, &block) end
#   
# delete_task :publish_docs
# 
# desc "Publish rdocs to rubyforge"
# task :publish_docs => [ :clean, :docs ] do
#   config = YAML.load(File.read(File.expand_path("~/.rubyforge/user-config.yml")))
#   pub = Rake::SshDirPublisher.new "#{config["username"]}@rubyforge.org", 
#     "/var/www/gforge-projects/cassandra/rdoc", 
#     'doc'
#   pub.upload
# end
# 
# task :publish_site => [ :compile ] do
#   cmd = "scp -qr site/*.{html,css,jpg,png} automatthew@rubyforge.org:/var/www/gforge-projects/cassandra"
#   puts "Uploading: #{cmd}"
#   system(cmd)
# end
# 
# def rubyforge_config
#   @rubyforge_config ||= YAML.load(File.read(File.expand_path("~/.rubyforge/user-config.yml")))
# end
# 
# 
# 
# # List all the desired pages as dependencies on :compile
# task :compile => %w{ site/index.html site/basic.css site/ruby.css }
# 
# task :clean do
#   f = FileList['site/**/*.html', 'site/*.css']
#   puts f; rm f
# end
# 
# rule '.html' => [ '.mab' ] do |t|
#   mab(t.source, t.name)
# end
# 
# file 'site/index.mab' => [ 'site/basic.rb' ]
# 
# rule '.css' => [ '.cssy' ] do |t|
#   cssify(t.source, t.name)
# end
#   
# require 'markaby'
# $:.unshift "lib"
# require 'cassandra'
# 
# def mab(source, target)
#   mab = Markaby::Builder.new
#   result = mab.instance_eval(File.read(source))
#   File.open(target, 'w') do |f|
#     f.puts result
#   end
# end
# 
# def cssify(source, target)
#   c = Cssy.new.process(File.read(source))
#   File.open(target, 'w') do |f|
#     f.puts c.to_s
#   end
# end
# 
# 
